model User {
  id String @id @default(uuid())
  email String @unique
  password String
  role UserRole @default(PATIENT)
  needPasswordChange Boolean @default(true)
  status UserStatus @default(ACTIVE)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
   Patient Patient[]
  Doctor Doctor[]
  Admin Admin[]

  @@map("users") 
  
 

}

model Admin{
  id String @id @default(uuid())
  name String
  email String @unique
  profilePhoto String?
  contactNumber String
  isDeleted Boolean @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId String @unique
   user User @relation(fields: [userId], references: [id])

@@map("admins")
}

model Doctor{
  id String @id @default(uuid())
  name String
  email String  @unique
   profilePhoto String?
  contactNumber String
  address String
  registrationNumber String
  experience Int
  gender UserGender
  appointmentFee Int
  qualification String
  currentWorkingPlace String
  designation String
  isDeleted Boolean @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId String @unique
   user User @relation(fields: [userId], references: [id])
   doctorSchedule DoctorSchedules[]

    doctorSpecialties DoctorSpecialties[]
@@map("doctors")
}

model Patient {
    id           String   @id @default(uuid())
    email        String   @unique
    name         String
    profilePhoto String?
    address      String?
    isDeleted    Boolean  @default(false)
    createdAt    DateTime @default(now())
    updatedAt    DateTime @updatedAt

  userId String @unique
   user User @relation(fields: [userId], references: [id])

    @@map("patients")
}